function Posture()
setup() ;


%net=Inicha();%Inicha();%Inihand();%%InitializationSVGG();
net=load('E:\old matconvnet\Pretrained\imagenet-caffe-ref.mat');
%net=load('E:\old matconvnet\Pretrained\vgg-face.mat');
net.layers(end)=[];
net.layers(end)=[];


net.layers{end+1} = struct('name', 'Efull4',...
                           'type', 'conv', ...
                           'weights', {xavier(1,1,4096,2048)}, ...
                           'stride', 1, ...
                           'dilate', 1, ...
                           'pad', 0) ;
                       
net.layers{end+1} = struct(...
                           'name', 'Relu', ...
                           'type', 'relu') ;
                       
net.layers{end+1} = struct('name', 'Efull5',...
                           'type', 'conv', ...
                           'weights', {xavier(1,1,2048,10)}, ...
                           'stride', 1, ...
                           'dilate', 1, ...
                           'pad', 0) ;                        
net.layers{end+1} = struct('type', 'softmaxloss') ;
% %%%%----------------------------------first layer-------------------
% net.layers{1} = struct('name', 'First',...
%                            'type', 'conv', ...
%                            'weights', {xavier(11,11,3,96)}, ...
%                            'stride', 1, ...
%                            'dilate', 1, ...
%                            'pad', 0) ; 

% net.layers{1}.stride =1; 
% net.layers{1}.dilate= 1;
% net.layers{1}.pad= 0 ; 
                          
%%%%-----------------------------------------------------------------  

net = vl_simplenn_tidy(net) ;
% %%%%%%%%%%%%%%%%%%%%%%%decoder finetune
% net1=load('C:\Users\Anwar_Mira\Documents\MATLAB\practical-cnn-reg-2016a (1).tar\practical-cnn-reg-2016a\practical-cnn-reg-2016a\data\(All)XHub(Mix)decodM96L(outfull+C1&C2&C3+rgball\net-epoch-8.mat');
% net1.net.layers(end)=[];
% % w=net1.net.layers{1}.weights{1}(:,:,1,:);
% % net1.net.layers{1}.weights{1}=w;
% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% for i=1:20%(outfull)%22
% net.layers{i}=net1.net.layers{i};
% end
% 
% 
% %net.layers{23}=net1.net.layers{24};%full
% % %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% %  for j=1:20
% %      net.layers{j}=net1.net.layers{j};
% %      if strcmp(net.layers{j}.type,'sconv')==1
% %        net.layers{j}.type='conv';
% %      end
% %      if strcmp(net.layers{j}.type,'srelu')==1
% %        net.layers{j}.type='relu';
% %      end
% %      if strcmp(net.layers{j}.type,'sdropout')==1
% %        net.layers{j}.type='dropout';
% %      end
% %      if strcmp(net.layers{j}.type,'spool')==1
% %        net.layers{j}.type='pool';
% %      end
% %  end
% 
% %%%%%%%%%%%%%%%(outfull)
% net.layers{end+1} = struct('name', 'Efull1',...
%     'type', 'conv', ...
%     'weights', {xavier(4,4,128,2048)}, ...
%     'stride', 1, ...
%     'pad', 0) ;
% %%%%%%%%%%%%%%%
% 
% net.layers{end+1} = struct(...
%                            'name', 'Erelu', ...
%                            'type', 'relu') ; 
% net.layers{end+1} = struct('name','Edropout',...
%                            'type', 'dropout', ...
%                            'rate', 0.5) ; 
% net.layers{end+1} = struct('name', 'Efull2',...
%     'type', 'conv', ...
%     'weights', {xavier(1,1,2048,2048)}, ...
%     'stride', 1, ...
%     'pad', 0) ;
% net.layers{end} = struct(...
%                            'name', 'Ereluf2', ...
%                            'type', 'relu') ; 
% net.layers{end+1} = struct('name','Edropout',...
%                            'type', 'dropout', ...
%                            'rate', 0.5) ;                       
%                        
% net.layers{end+1} = struct('name', 'Efull3',...
%                            'type', 'conv', ...
%                            'weights', {xavier(1,1,2048,20)}, ...
%                            'stride', 1, ...
%                            'pad', 0) ;     
% net.layers{end+1} = struct('type', 'softmaxloss') ;
% net = vl_simplenn_tidy(net) ;
Posturetraining1(net) ;